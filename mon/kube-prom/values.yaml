---
defaultRules:
  rules:
    etcd: false

kubeEtcd:
  enabled: false

kubeControllerManager:
  enabled: false

kubeScheduler:
  enabled: false

alertmanager:
  config:
    global:
      resolve_timeout: 1m
      slack_api_url_file: /etc/alertmanager/secrets/slack-secrets/slack-api-url
    route:
      receiver: slack
    receivers:
      - name: 'null'
      - name: slack
        slack_configs:
          - channel: '#homelab'
            api_url:
              key: slack-api-url
              name: slack-secrets
            send_resolved: true
            icon_url: https://avatars3.githubusercontent.com/u/3380462
            title: >-
              {{`{{`}} if eq .Status "firing" {{`}}`}}:fire: *FIRING* {{`{{`}} else {{`}}`}}:ok_hand: *RESOLVED* {{`{{`}} end {{`}}`}}
            text: >-
              {{`{{`}} range .Alerts {{`}}`}}
                  {{`{{`}} if .Annotations.summary {{`}}`}}*Alert:* {{`{{`}} .Annotations.summary {{`}}`}} - `{{`{{`}} .Labels.severity {{`}}`}}`{{`{{`}} end {{`}}`}}
                  {{`{{`}} if .Annotations.description {{`}}`}}*Description:* {{`{{`}} .Annotations.description {{`}}`}}{{`{{`}} end {{`}}`}}
                  *Details:*
                  {{`{{`}} range .Labels.SortedPairs {{`}}`}} â€¢ *{{`{{`}} .Name {{`}}`}}:* `{{`{{`}} .Value {{`}}`}}`
                  {{`{{`}} end {{`}}`}}
              {{`{{`}} end {{`}}`}}
  service:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: alerts.wiersma.tech.
      external-dns.alpha.kubernetes.io/ttl: 5m
    type: LoadBalancer
    port: 80
  alertmanagerSpec:
    replicas: 1
    externalUrl: http://alerts.wiersma.tech
    secrets:
      - slack-secrets
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
    resources:
      requests:
        cpu: 25m
        memory: 32Mi

prometheus:
  prometheusSpec:
    replicas: 1
    retention: 3d
    ruleSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    resources:
      requests:
        cpu: 1
        memory: 2Gi

grafana:
  plugins: []
  grafana.ini:
    auth:
      disable_login_form: true
      disable_signout_menu: true
    auth.anonymous:
      enabled: true
      org_role: Admin
    users:
      viewers_can_edit: true
  resources:
    requests:
      cpu: 100m
      memory: 500Mi

  sidecar:
    resources:
      requests:
        cpu: 5m
        memory: 64Mi
  service:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: mon.wiersma.tech.
      external-dns.alpha.kubernetes.io/ttl: 5m
    type: LoadBalancer

prometheusOperator:
  resources:
    requests:
      cpu: 50m
      memory: 128Mi

prometheus-node-exporter:
  resources:
    requests:
      cpu: 5m
      memory: 16Mi

kube-state-metrics:
  resources:
    requests:
      cpu: 5m
      memory: 128Mi

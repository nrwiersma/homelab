---
image:
  registry: ghcr.io
  repository: linuxserver/plex
  tag: "1.41.6"

pms:
  configStorage: 10Gi
  resources: {}

service:
  type: LoadBalancer
  port: 80
  annotations:
    metallb.universe.tf/loadBalancerIPs: "10.0.2.8"
    external-dns.alpha.kubernetes.io/hostname: plex.wiersma.tech.
    external-dns.alpha.kubernetes.io/ttl: 5m

extraEnv:
  PUID: "1000"
  PGID: "1000"
  TZ: Etc/UTC
  ALLOWED_NETWORKS: "10.0.0.1/255.255.255.0,10.0.2.1/255.255.255.0,10.42.0.1/255.255.0.0"

initContainer:
  script: |-
    #!/bin/sh
    echo "Waiting for pre-existing pms database to uploaded..."
    
    if [ -d "/config/Library" ]; then
      echo "PMS library already exists, exiting."
      exit 0
    fi
    
    # wait for the database archive to be manually copied to the server
    while [ ! -f /pms.tgz ]; do sleep 2; done;
    
    tar -xvzf /pms.tgz -C /config
    rm pms.tgz
    
    echo "Done."

extraInitContainers:
  - name: imagemaid
    image: kometateam/imagemaid
    restartPolicy: Always
    env:
      - name: PLEX_PATH
        value: /config
      - name: MODE
        value: remove
      - name: SCHEDULE
        value: 05:00|weekly(monday)
      - name: PLEX_URL
        value: http://localhost:32400
      - name: TIMEOUT
        value: '600'
      - name: SLEEP
        value: '60'
      - name: PHOTO_TRANSCODER
        value: 'True'
      - name: CLEAN_BUNDLES
        value: 'True'
      - name: OPTIMIZE_DB
        value: 'True'
      - name: PLEX_TOKEN
        valueFrom:
          secretKeyRef:
            name: plex-token
            key: token
    volumeMounts:
      - name: pms-config
        mountPath: /config

extraVolumeMounts:
  - name: series
    mountPath: "/media/series"
  - name: movies
    mountPath: "/media/movies"

extraVolumes:
  - name: series
    persistentVolumeClaim:
      claimName: series
  - name: movies
    persistentVolumeClaim:
      claimName: movies
